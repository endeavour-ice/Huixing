spring:
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  profiles:
    active: dev
#  config:
#    activate:
#      on-profile:
#        - dev
  application:
    name: user-center
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${mysql.ip}:${mysql.port}/${mysql.db}?serverTimezone=GMT%2B8
    username: ${mysql.username}
    password: ${mysql.password}
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 10
      # 最小连接池数量
      min-idle: 10
      #最大连接池数量
      maxActive: 200
      # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
      # 如果需要可以通过配置use-unfair-lock属性为true使用非公平锁。
      maxWait: 60000
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      poolPreparedStatements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      maxPoolPreparedStatementPerConnectionSize: -1
      use-unfair-lock: true
  #  session 失效时间
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  session:
    timeout: 86400
    store-type: none
  redis:
    host: ${redis.host}
    port: ${redis.port}
    timeout: 1800000
    database: 0
    lettuce:
      pool:
        max-active: 20
        max-wait: 1
  rabbitmq:
    username: ${rabbitmq.username}
    password: ${rabbitmq.password}
    host: ${rabbitmq.host}
    port: ${rabbitmq.port}
    publisher-confirm-type: correlated
    publisher-returns: true

server:
  port: 8080
  address: 0.0.0.0
  servlet:
    context-path: /py

mybatis-plus:
  mapper-locations: classpath:mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true
  #    日志
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启sql日志
  global-config:
    db-config:
      logic-delete-field: flag # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
aliyun:
  oss:
    file:
      endpoint: ${aliyun.oss.file.endpoint}
      keyid: ${aliyun.oss.file.keyid}
      keysecret: ${aliyun.oss.file.keysecret}
      bucketname: ${aliyun.oss.file.bucketname}
email:
  fromEmail: ${email.fromEmail}
  password: ${email.password}

chatGpt:
  token: ${chatGpt.token}

wx:
  appId: ${wx.appId}
  appsecret: ${wx.appsecret}
qq:
  id: ${qq.id}
  key: ${qq.key}

token:
  secret: ${token.secret}
zfb:
  appId: ${zfb.appId}
  merchantPrivateKey: ${zfb.merchantPrivateKey}
  alipayPublicKey: ${zfb.alipayPublicKey}
  notifyUrl: ${zfb.notifyUrl}
  returnUrl: ${zfb.returnUrl}